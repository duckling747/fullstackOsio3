{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/NameEntry.js","components/Persons.js","services/serveri.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","handleFilterChange","value","onChange","PersonForm","addNumber","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","NameEntry","name","number","delHandler","onClick","Persons","persons","p","toLowerCase","includes","map","person","i","key","id","baseUrl","axios","get","then","res","data","newObject","post","put","delete","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","error","setError","useEffect","numService","initialNumbers","event","target","preventDefault","numberObject","duplicate","find","window","confirm","returnedNum","concat","catch","setTimeout","retval","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.abb31c35.chunk.js","sourcesContent":["import React from 'react'\n\n\n\nconst Filter = ({ filter, handleFilterChange }) =>\n<>\n    filter names with <input value={filter} onChange={handleFilterChange} />\n</>\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ addNumber, newName, handleNameChange, newNumber, handleNumberChange }) => {\n    return (\n    <form onSubmit={addNumber}>\n        <div>\n        name: <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n        <button type=\"submit\">add</button>\n        </div>\n    </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst NameEntry = ({ name, number, delHandler }) =>\n    <p>{name} {number} <button onClick={delHandler}>delete</button></p>\n\nexport default NameEntry","import React from 'react'\nimport NameEntry from './NameEntry'\n\nconst Persons = ({ persons, filter, delHandler }) => {\n    return (\n    <>\n    {persons\n        .filter(p => p.name.toLowerCase().includes(filter.toLowerCase()))\n        .map((person, i) =>\n        <NameEntry \n         key={person.id}\n         name={person.name} \n         number={person.number} \n         delHandler={() => delHandler(person.id, person.name)} />\n      )}\n    </>\n    )\n}\n\nexport default Persons\n","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios\n            .get(baseUrl)\n            .then(res => res.data)\n}\n\nconst create = (newObject) => {\n    return axios\n            .post(baseUrl, newObject)\n            .then(res => res.data)\n}\n\nconst update = (id, newObject) => {\n    return axios\n            .put(`${baseUrl}/${id}`, newObject)\n            .then(res => res.data)\n}\n\nconst delNum = (id) => {\n    return axios\n            .delete(`${baseUrl}/${id}`)\n            .then(res => res.data)\n}\n\nexport default {\n    getAll, create, update, delNum\n}\n","import React from 'react'\n\nconst Notification = ({ message, className }) => {\n    if (message === null) return null\n\n    return (\n        <div className={className}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport numService from './services/serveri'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ error, setError ] = useState(false)\n\n  useEffect(() => {\n      numService\n        .getAll()\n        .then(initialNumbers => {\n          setPersons(initialNumbers)\n        })\n  },Â [])\n\n  const addNumber = (event) => {\n    event.preventDefault()\n    const numberObject = { name: newName, number:newNumber }\n    const duplicate = persons.find(p => p.name === newName)\n    // console.log(duplicate)\n    if (duplicate) {\n      const okay = window.confirm(\n      `${newName} is already added to phonebook, \\\nreplace the old number with a new one?`\n      )\n      if (!okay) return\n      numService\n        .update(duplicate.id, { ...duplicate, number: newNumber })\n        .then(returnedNum => {\n          setPersons(\n            persons\n              .filter(p => p !== duplicate)\n              .concat(returnedNum))\n          setError(false)\n          setMessage(`Person ${newName} updated`)\n        })\n        .catch(error => {\n          setError(true)\n          setMessage(`Updating failed to server`)\n        })\n    } else {\n      numService\n        .create(numberObject)\n        .then(returnedNum => {\n          setPersons(persons.concat(returnedNum))\n          setError(false)\n          setMessage(`Person ${newName} added`)\n        })\n        .catch(error => {\n          setError(true)\n          setMessage(`Adding failed to server`)\n        })\n    }\n    setTimeout(() => {\n      setMessage(null)\n    }, 2000)\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleNameChange = (event) => {\n    // console.log(\"testing\", event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    // console.log(\"testing\", event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    // console.log(\"filter:\", event.target.value)\n    setFilter(event.target.value)\n  }\n\n  const handleDel = (id, name) => {\n    const response \n      = window.confirm(`Poistetaanko ${name}?`)\n    if (!response) return\n    numService\n      .delNum(id)\n      .then(retval => {\n        setPersons(persons.filter(p => p.id !== id))\n        setError(false)\n        setMessage(`Person ${name} deleted`)\n      })\n      .catch(error => {\n        setError(true)\n        setMessage(`Already gone!`)\n      })\n    setTimeout(() => {\n      setMessage(null)\n    }, 2000);\n  }\n  const className = error ? \"error\" : \"notification\"\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} className={className} />\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      <h2>Add new number</h2>\n      <PersonForm addNumber={addNumber}\n       newName={newName} handleNameChange={handleNameChange}\n       newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} delHandler={handleDel} />\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}